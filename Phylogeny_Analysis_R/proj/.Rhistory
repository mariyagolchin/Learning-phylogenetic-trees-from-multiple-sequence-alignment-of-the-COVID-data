support_values
# Plot the tree with support values using ggtree
ggtree(tree, layout="daylight", branch.length='none') +
geom_tiplab(size=1, color='red',aes(angle=angle)) +
geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.3,size=2)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=1, color='red',aes(angle=angle)) +
geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.3,size=2)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=1, color='red',aes(angle=angle)) +
geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.3,size=2)+
geom_point(aes(shape=isTip, color=isTip), size=3)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=1, color='red',aes(angle=angle)) +
geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.3,size=2)+
geom_point(aes(shape=isTip, color=isTip), size=2)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=2, color='red',aes(angle=angle)) +
geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=2, color='red') +
geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') + scale_x_reverse()+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +layout_inward_circular(xlim=15)+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +layout_inward_circular(xlim=15)+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +geom_treescale(x=0, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=2, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=2, y=45, width=1, color='red')+
geom_tiplab(size=2, as_ylab=TRUE,color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=2, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=-.6,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=2, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label), hjust=1,size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=2, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+ geom_text(aes(label=tree$label),size=1)+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=2, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("myplot.png", width = 10, height = 10, dpi = 300)
ggsave("myplot.png", width = 20, height = 50, dpi = 300)
ggsave("myplot.png", width = 50, height = 50, dpi = 300)
ggsave("myplot.png", width = 50, height = 50, dpi = 300,limitsize = FALSE)
ggsave("myplot.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("T_TREE.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# Read in the tree file
# tree <- read.tree("T.raxml.bestTree")
tree <- read.tree("S1.raxml.bestTree")
# Read in the support values file
support_values <- read.table("cov_bootstrap100rep.raxml.support", header=FALSE)
support_values
# Add the support values to the tree object
tree$label <- support_values$V1
tree$label
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("T_TREE.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("S1_TREE.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# Read in the tree file
tree <- read.tree("T.raxml.bestTree")
# Read in the support values file
support_values <- read.table("cov_bootstrap100rep.raxml.support", header=FALSE)
support_values
# Add the support values to the tree object
tree$label <- support_values$V1
tree$label
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("T_TREE.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
library(ggtree)
# Read in the tree file
tree <- read.tree("T.raxml.bestTree")
# Read in the support values file
support_values <- read.table("cov_bootstrap100rep.raxml.support", header=FALSE)
support_values
# Add the support values to the tree object
tree$label <- support_values$V1
tree$label
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
library(ggtree)
# Read in the tree file
tree <- read.tree("T.raxml.bestTree")
# Read in the support values file
support_values <- read.table("cov_bootstrap100rep.raxml.support", header=FALSE)
support_values
# Add the support values to the tree object
tree$label <- support_values$V1
tree$label
# Plot the tree with support values using ggtree
myplot <- ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Save the plot as a PDF file
ggsave("T_TREE.pdf", myplot, width = 8, height = 8, units = "in")
tree$label
tree
library(ggtree)
# tree <- read.tree("S1.raxml.bestTree")
tree <- read.tree("B2.raxml.support")
library(ggtree)
library(treeio)
# Read in the tree file
tree_file <- "B2.raxml.support"
tree <- read.tree(tree_file)
# Attach the support values to the tree as node labels
support_values <- get.data(tree, "support")
library(ggtree)
library(treeio)
# Read in the tree file
tree_file <- "B2.raxml.support"
tree <- read.tree(tree_file)
# Attach the support values to the tree as node labels
support_values <- get_node_values(tree, "support")
tree$node.label
head(tree)
tree$tip.label
# Read in the tree file
tree_file <- "B2.raxml.support"
tree <- read.tree(tree_file)
# Attach the support values to the tree as node labels
support_values <- tree$node.label
# Plot the tree with ggtree and show support values on the tips
ggtree(tree) +
geom_tiplab(aes(label = ifelse(!is.na(support_values), support_values, "")))
# Plot the tree with ggtree and show support values on the tips
ggtree(tree)
tree$edge
library(ggtree)
library(treeio)
# Read in the tree file
tree_file <- "B2.raxml.support"
tree <- read.tree(tree_file)
# Add node labels to tree as edge labels
edge_labels <- tree$node.label[tree$edge[, 2]]
tree$edge.length[is.na(tree$edge.length)] <- 0
tree$edge.label <- edge_labels
# Plot the tree with ggtree and show node labels on the edges
ggtree(tree, layout = "circular") +
geom_text2(aes(x = midpoint, y = branch, label = edge.label), size = 3, hjust = 0)
s
# Add node labels to tree as edge labels
edge_labels <- tree$node.label[tree$edge[, 2]]
tree$edge.length[is.na(tree$edge.length)] <- 0
tree$edge.label <- edge_labels
# Plot the tree with ggtree and show node labels on the edges
ggtree(tree, layout = "circular")
# Plot the tree with ggtree and show node labels on the edges
ggtree(tree, layout = "circular")+
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
library(ggtree)
library(treeio)
# Read in the tree file
tree_file <- "B2.raxml.support"
tree <- read.tree(tree_file)
# Add node labels to tree as edge labels
edge_labels <- tree$node.label[tree$edge[, 2]]
tree$edge.length[is.na(tree$edge.length)] <- 0
tree$edge.label <- edge_labels
# Plot the tree with ggtree and show node labels on the edges
ggtree(tree, layout = "circular") +
geom_text2(aes(x = midpoint, y = branch, label = edge.label), size = 3, hjust = 0)
library(ggtree)
tree <- read.tree("B2_100REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("B2_100REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
tree$node.label
library(ggtree)
# Read in the tree file
tree <- read.tree("B2_100REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = node.label), size = 3, hjust = -0.1, color = "grey")
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = tree$node.label), size = 3, hjust = -0.1, color = "grey")
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = tree$node.label), size = 3, hjust = -0.1, color = "grey")
tree$node.label
tree$edge.length
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = tree$edge.length), size = 3, hjust = -0.1, color = "grey")
labedge<- tree$edge.length
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = labedge), size = 3, hjust = -0.1, color = "grey")
library(ggtree)
# Read in the tree file
tree <- read.tree("B2.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = ifelse(!is.na(node_support), node_support, "")), size = 3, hjust = -0.1, color = "grey")
library(ggtree)
# Read in the tree file
tree <- read.tree("B2.raxml.support")
# Create a named vector of bootstrap support values
bs_values <- tree$edge.length
names(bs_values) <- seq_along(bs_values)
# Plot the tree with support values using ggtree
ggtree(tree, layout = "circular", branch.length = "none") +
geom_treescale(x = 1, y = 45, width = 1, color = "red") +
geom_tiplab(size = 2, color = "blue", aes(angle = angle)) +
theme(legend.position = "none") +
geom_point(aes(shape = isTip, color = isTip), size = 1) +
geom_text2(aes(x = x, y = y, label = ifelse(!is.na(bs_values[as.integer(edge)]), bs_values[as.integer(edge)], "")), size = 3, hjust = -0.1, color = "grey")
# Create a named vector of bootstrap support values
bs_values <- tree$edge.length
bs_values
names(bs_values)
names(bs_values)
tree$tip.label
library(ggtree)
# Read in the tree file
tree <- read.tree("B2.raxml.support")
# Create a named vector of bootstrap support values
bs_values <- as.character(tree$node.label)
names(bs_values) <- tree$tip.label
length(tree$tip.label)
length(tree$node.label)
length(tree$edge.length)
tree$node.label
library(ape)
# Check the length of the tip label vector
length(tree$tip.label)
# Get the number of tips in the tree
Ntip(tree)
library(ggtree)
# tree <- read.tree("B2_100REPBOOT.raxml.support")
tree <- read.tree("TSUP.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
tree <- read.tree("B2_100REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("B2_100REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
tree <- read.tree("B2_1000REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("B2_100REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("B2_1000REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# Read Maping file of bootstrap support values to the best ML tree
# tree <- read.tree("B2_1000REPBOOT.raxml.support")
tree <- read.tree("TSUP.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Read Maping file of bootstrap support values to the best ML tree
tree <- read.tree("B2_1000REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("B2_1000REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# Read Maping file of bootstrap support values to the best ML tree
tree <- read.tree("B2_1000REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Read Maping file of bootstrap support values to the best ML tree
# tree <- read.tree("B2_1000REPBOOT.raxml.support")
tree <- read.tree("TSUP.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# Read Maping file of bootstrap support values to the best ML tree
tree <- read.tree("B2_1000REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("B2_1000REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
# Read Maping file of bootstrap support values to the best ML tree
# tree <- read.tree("B2_1000REPBOOT.raxml.support")
tree <- read.tree("TSUP.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='blue',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# Read Maping file of bootstrap support values to the best ML tree
tree <- read.tree("B2_1000REPBOOT.raxml.support")
# Plot the tree with support values using ggtree
ggtree(tree, layout="circular", branch.length='none') +
geom_treescale(x=1, y=45, width=1, color='red')+
geom_tiplab(size=2, color='red',aes(angle=angle)) +
# geom_tippoint(aes(size=label), shape=1, fill='gray') +
theme(legend.position="none")+
geom_point(aes(shape=isTip, color=isTip), size=1)
# ggsave("TSUP.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
ggsave("B2_1000REPBOOT.png", width = 30, height = 30, dpi = 300,limitsize = FALSE)
install.packages("wgcna")
install.packages("WGCNA")
library(WGCNA)
